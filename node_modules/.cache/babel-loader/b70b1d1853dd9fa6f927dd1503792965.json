{"ast":null,"code":"var _jsxFileName = \"/Users/nadia/Desktop/music - akramNadia/src/components/album/album.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button, CardImg, CardTitle, CardText, ListGroupItem, ListGroup, CardSubtitle, CardBody, Container, Row, Col } from 'reactstrap';\nimport AudioPlayer from \"react-h5-audio-player\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from \"react-redux\";\nimport { playMusic } from \"../../redux/action\";\nimport Music from '../music/music';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    playMusic: music_url => dispatch(playMusic(music_url))\n  };\n}\n\nclass ConnectedAlbum extends Component {\n  constructor(props) {\n    super(props);\n    const album = props.match.params.album_id;\n    this.state = {\n      album: album,\n      tracks: [],\n      artwork: '',\n      artist: '',\n      music_url: ''\n    };\n  }\n\n  playMusic(music) {\n    this.props.playMusic(music);\n    this.setState({\n      music_url: music\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://tannerv.ddns.net:3000/api/album/' + this.state.album).then(response => response.json()).then(json => {\n      this.setState({\n        tracks: json,\n        artwork: json[0].artwork,\n        artist: json[0].artist\n      });\n    }).catch(function () {\n      console.log(\"error\");\n    });\n    ;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"artist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/albums\",\n      className: \"return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \\u2039 Albums \")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boxartist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"varialbum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      className: \"images\",\n      src: 'http://tannerv.ddns.net:12345/SpotiReact/' + this.state.artwork,\n      alt: \"album\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.album), React.createElement(CardSubtitle, {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", this.state.artist)))), React.createElement(Col, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.tracks.map((item, i) => React.createElement(ListGroupItem, {\n      key: i,\n      className: \"clickable\",\n      onClick: () => this.playMusic(item.url),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" \", item.name, \" \")))))))));\n  }\n\n}\n\nconst Album = connect(null, mapDispatchToProps)(ConnectedAlbum);\nexport default Album;","map":{"version":3,"sources":["/Users/nadia/Desktop/music - akramNadia/src/components/album/album.js"],"names":["React","Component","Link","Card","Button","CardImg","CardTitle","CardText","ListGroupItem","ListGroup","CardSubtitle","CardBody","Container","Row","Col","AudioPlayer","connect","playMusic","Music","mapDispatchToProps","dispatch","music_url","ConnectedAlbum","constructor","props","album","match","params","album_id","state","tracks","artwork","artist","music","setState","componentDidMount","fetch","then","response","json","catch","console","log","render","map","item","i","url","name","Album"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Card, Button, CardImg, CardTitle, CardText, ListGroupItem, ListGroup,\n    CardSubtitle, CardBody, Container, Row, Col\n} from 'reactstrap';\nimport AudioPlayer from \"react-h5-audio-player\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from \"react-redux\";\nimport { playMusic } from \"../../redux/action\";\nimport Music from '../music/music';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        playMusic: music_url => dispatch(playMusic(music_url))\n    };\n}\n\nclass ConnectedAlbum extends Component {\n    constructor(props) {\n        super(props);\n        const album = props.match.params.album_id;\n        this.state = {\n            album: album,\n            tracks: [],\n            artwork: '',\n            artist: '',\n            music_url: '',\n        };\n\n    }\n\n    playMusic(music) {\n        this.props.playMusic(music);\n        this.setState({\n            music_url: music\n        });\n    };\n\n    componentDidMount() {\n        fetch('http://tannerv.ddns.net:3000/api/album/' + this.state.album)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    tracks: json,\n                    artwork: json[0].artwork,\n                    artist: json[0].artist\n                })\n            })\n            .catch(function () {\n                console.log(\"error\");\n            });;\n    }\n    \n\n    render() {\n\n        return (\n            <div className=\"artist\">\n                <p className=\"arrow-back\"><Link to=\"/albums\" className=\"return\"> &lsaquo; Albums </Link></p>\n                <div className=\"container\">\n                    <div className='boxartist'>\n                        <Container>\n                            <Row>\n                                <Col md='4'>\n                                        <Card className=\"varialbum\" >\n                                            <CardImg top className='images' src={'http://tannerv.ddns.net:12345/SpotiReact/' + this.state.artwork} alt=\"album\" />\n                                            <CardBody>\n                                                <CardTitle className=\"title\">{this.state.album}</CardTitle>\n                                                <CardSubtitle className=\"subtitle\"> {this.state.artist}</CardSubtitle>\n                                            </CardBody>\n                                        </Card>\n                                </Col>\n                                <Col md='8'>\n                                    <ListGroup>\n                                        {this.state.tracks.map((item, i) =>\n                                            <ListGroupItem key={i} className=\"clickable\" onClick={() => this.playMusic(item.url)} > {item.name} </ListGroupItem>                                        \n                                        )}\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nconst Album = connect(\n    null,\n    mapDispatchToProps\n)(ConnectedAlbum);\n\nexport default Album;"]},"metadata":{},"sourceType":"module"}